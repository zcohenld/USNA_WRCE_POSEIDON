#####################################################################
# Print Start
#####################################################################

[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    CHAMBER_LED_ON
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
  
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}

    BED_MESH_PROFILE LOAD=default
    G32
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    # Move the nozzle very close to the bed
   
    G92 E0
    G1 X900 Y1 Z0.2 F5000.0
    # Move to start position
    G1 X700 Y1 Z0.2 F1500.0 E32
    G1 E30
    G92 E0
    # Reset Extruder
    G1 X700 Y5 Z5.0 F20000

    FSS_T0_ENABLE
    FSS_T0_2_ENABLE
    # Move Z Axis up little to prevent scratching of Heat Bed
   

#####################################################################
# Print End
#####################################################################

[gcode_macro PRINT_END]
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5 F4500                   ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 50.0 %}
    {% else %}
        {% set y_safe = -50.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    FSS_T0_DISABLE
    FSS_T0_2_DISABLE
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y-10} F3600       ; park nozzle at rear
    BED_MESH_CLEAR
    
    
#####################################################################
# Off
#####################################################################


[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107   

#####################################################################
# CHOME
#####################################################################

[gcode_macro CHOME]
description: Homes XYZ axis only if printer is in a non-homed state
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}


#####################################################################
# G32
#####################################################################

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    Z_TILT_ADJUST
    G28
    RESTORE_GCODE_STATE NAME=STATE_G32


#####################################################################
# Center Printhead
#####################################################################

[gcode_macro CENTER]
description: Moves the toolhead to the center
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y{x_center} Z10 F8000


#####################################################################
# Front Printhead
#####################################################################

[gcode_macro FRONT]
description: Moves the toolhead to the front
gcode:
  CHOME
  {% set x_center = printer.toolhead.axis_maximum.x|float / 2.0 %}
  {% set y_center = printer.toolhead.axis_maximum.y|float / 2.0 %}
  G90
  G1 X{x_center} Y1 Z50 F8000
  
#####################################################################
# Unload Filament
#####################################################################

[gcode_macro UNLOAD_FILAMENT]
description: Unloads filament from toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
  CHOME
  G91                         ; relative positioning
  G1 Z20                      ; move nozzle upwards
  STATUS_HEATING
  FRONT                       ; move the toolhead to the front
  M109 S{EXTRUDER_TEMP}       ; heat up the hotend
  M83                         ; set extruder to relative mode
  STATUS_READY
  G1 E2 F300                  ; extrude small amount of filament
  G1 E-50 F1800                ; quickly retract a small amount to elimate stringing
  G4 P200                     ; pause for a short amount of time
  G1 E-50 F1800
  M400                        ; wait for moves to finish
  M117 Unload Complete!


#####################################################################
# Load Filament
#####################################################################

[gcode_macro LOAD_FILAMENT]
description: Loads new filament into toolhead
gcode:
  {% set EXTRUDER_TEMP = params.TEMP|default(230)|int %}
  FRONT                       ; move the toolhead to the front
  STATUS_HEATING  
  M109 S{EXTRUDER_TEMP}       ; heat up the hotend
  M83                         ; set extruder to relative mode
  STATUS_READY  
  G1 E50 F300                 ; extrude slowly
  M400                        ; wait for moves to finish
  G1 E-1 F300                 ; retract a bit
  M117 Load Complete!
   

#####################################################################
# Filament Sensor
#####################################################################

[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the FSS 1 second after klipper starts
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=FSS_T0 ENABLE=0

[gcode_macro FSS_ENABLE]
description: Enable smart filament sensor
gcode:
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=FSS_T0 ENABLE=1

[gcode_macro FSS_DISABLE]
description: Disable smart filament sensor 
gcode:
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=FSS_T0 ENABLE=0


#####################################################################
# Test Speed
#####################################################################

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        G28
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED


#####################################################################
# Bed PID
#####################################################################

[gcode_macro PID_BED]
description: Start Bed PID
gcode:
    {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
    {% else %}
    CHOME
    M106
    G90
    G1 Z50 F3000
    RESPOND MSG="Bed PID in progress..."
    PID_CALIBRATE HEATER=heater_bed TARGET={params.TEMP|default(100)}
    SAVE_CONFIG
    {% endif %}


#####################################################################
# Hotend PID
#####################################################################

[gcode_macro PID_HOTEND]
description: Start Hotend PID
gcode:
    {% if printer.idle_timeout.state == "Printing" %}
    RESPOND TYPE=error MSG="This macro cannot be used while printing!"
    {% else %}
    CHOME
    M106
    G90
    G1 Z50 F3000
    RESPOND MSG="Hotend PID in progress..."
    PID_CALIBRATE HEATER=extruder TARGET={params.TEMP|default(260)}
    SAVE_CONFIG
    {% endif %}


#####################################################################
# Bed Screw Adjustment
#####################################################################

[gcode_macro BED_SCREW_ADJUSTMENT]
gcode:
  M190 S65
  G28
  BED_SCREWS_ADJUST


#####################################################################
# Chamber Light
#####################################################################

[gcode_macro CHAMBER_LED_ON]
gcode:
 SET_PIN PIN=caselight VALUE=1

[gcode_macro CHAMBER_LED_IDLE]
gcode:
 SET_PIN PIN=caselight VALUE=0.5

[gcode_macro CHAMBER_LED_OFF]
gcode:
 SET_PIN PIN=caselight VALUE=0


#####################################################################
# Preheat
#####################################################################

[gcode_macro PREHEAT]
description: Preheat hotend and bed
gcode:
    {% set EXTRUDER_TEMP = params.HOTEND|default(175)|int %}
    {% set BED_TEMP = params.HEATBED|default(65)|int %}
    M104 S{EXTRUDER_TEMP}
    M140 S{BED_TEMP}


#####################################################################
# Probe Calibration
#####################################################################

[gcode_macro Z_Probe_Calibrate]
description: Run Probe calibration wizard
gcode:
    G32
    ATTACH_PROBE
    G1 X500 Y25 Z10 F8000
    PROBE_CALIBRATE
#####################################################################
# Z Offset Calibration
#####################################################################

[gcode_macro Z_Offset_Calibration]
description: Run Z offset calibration wizard
gcode:
    G32
    G1 X500 Y500 Z5 F8000
    Z_ENDSTOP_CALIBRATE


#####################################################################
# 
#####################################################################


#####################################################################
# 
#####################################################################


#####################################################################
# 
#####################################################################


#####################################################################
# 
#####################################################################


#####################################################################
# 
#####################################################################


#####################################################################
# 
#####################################################################


#####################################################################
# 
#####################################################################


#####################################################################
# 
#####################################################################


#####################################################################
# 
#####################################################################

